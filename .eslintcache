[{"D:\\Projects\\dealer_front\\src\\index.tsx":"1","D:\\Projects\\dealer_front\\src\\routes.tsx":"2","D:\\Projects\\dealer_front\\src\\store\\index.ts":"3","D:\\Projects\\dealer_front\\src\\pages\\Main.tsx":"4","D:\\Projects\\dealer_front\\src\\pages\\Clinics.tsx":"5","D:\\Projects\\dealer_front\\src\\pages\\Login.tsx":"6","D:\\Projects\\dealer_front\\src\\pages\\ProjectsList.tsx":"7","D:\\Projects\\dealer_front\\src\\pages\\CompanyProfile.tsx":"8","D:\\Projects\\dealer_front\\src\\pages\\Coworkers.tsx":"9","D:\\Projects\\dealer_front\\src\\pages\\User.tsx":"10","D:\\Projects\\dealer_front\\src\\pages\\NewOffer.tsx":"11","D:\\Projects\\dealer_front\\src\\layouts\\mainLayout.tsx":"12","D:\\Projects\\dealer_front\\src\\pages\\Project.tsx":"13","D:\\Projects\\dealer_front\\src\\layouts\\emptyLayout.tsx":"14","D:\\Projects\\dealer_front\\src\\layouts\\layoutStyles.tsx":"15","D:\\Projects\\dealer_front\\src\\components\\Slider.tsx":"16","D:\\Projects\\dealer_front\\src\\components\\ProjectOne.tsx":"17","D:\\Projects\\dealer_front\\src\\components\\Chart.tsx":"18","D:\\Projects\\dealer_front\\src\\components\\DataTable.tsx":"19","D:\\Projects\\dealer_front\\src\\components\\ToolsOffersSidebar.tsx":"20","D:\\Projects\\dealer_front\\src\\components\\UserDropdown.tsx":"21","D:\\Projects\\dealer_front\\src\\components\\CommercialOfferPositionMain.tsx":"22","D:\\Projects\\dealer_front\\src\\components\\MenuItems.tsx":"23","D:\\Projects\\dealer_front\\src\\components\\CompanyReq.tsx":"24","D:\\Projects\\dealer_front\\src\\components\\ToolsTable.tsx":"25","D:\\Projects\\dealer_front\\src\\components\\CustomerReq.tsx":"26","D:\\Projects\\dealer_front\\src\\components\\ModalCommercialOffer.tsx":"27","D:\\Projects\\dealer_front\\src\\components\\AuthorisedPosition.tsx":"28","D:\\Projects\\dealer_front\\src\\reducers\\auth.ts":"29","D:\\Projects\\dealer_front\\src\\components\\Search.tsx":"30","D:\\Projects\\dealer_front\\src\\components\\ClinicOne.tsx":"31","D:\\Projects\\dealer_front\\src\\components\\CompanyCard.tsx":"32","D:\\Projects\\dealer_front\\src\\components\\NotificationsMenu.tsx":"33","D:\\Projects\\dealer_front\\src\\components\\MailsMenu.tsx":"34","D:\\Projects\\dealer_front\\src\\store\\types.ts":"35","D:\\Projects\\dealer_front\\src\\components\\CommercialOfferOne.tsx":"36","D:\\Projects\\dealer_front\\src\\components\\ModalCompanyInfo.tsx":"37"},{"size":411,"mtime":1611482196138,"results":"38","hashOfConfig":"39"},{"size":1827,"mtime":1611585411684,"results":"40","hashOfConfig":"39"},{"size":646,"mtime":1611585411685,"results":"41","hashOfConfig":"39"},{"size":653,"mtime":1611482262734,"results":"42","hashOfConfig":"39"},{"size":581,"mtime":1611585411679,"results":"43","hashOfConfig":"39"},{"size":3417,"mtime":1611585411681,"results":"44","hashOfConfig":"39"},{"size":563,"mtime":1611585411682,"results":"45","hashOfConfig":"39"},{"size":1682,"mtime":1611585411680,"results":"46","hashOfConfig":"39"},{"size":1016,"mtime":1611585411681,"results":"47","hashOfConfig":"39"},{"size":4019,"mtime":1611585411683,"results":"48","hashOfConfig":"39"},{"size":1652,"mtime":1611585411682,"results":"49","hashOfConfig":"39"},{"size":3205,"mtime":1611585411678,"results":"50","hashOfConfig":"39"},{"size":1116,"mtime":1611482262734,"results":"51","hashOfConfig":"39"},{"size":164,"mtime":1611482262733,"results":"52","hashOfConfig":"39"},{"size":2241,"mtime":1611585411678,"results":"53","hashOfConfig":"39"},{"size":1656,"mtime":1611585411676,"results":"54","hashOfConfig":"39"},{"size":5192,"mtime":1611482262732,"results":"55","hashOfConfig":"39"},{"size":1674,"mtime":1611482262727,"results":"56","hashOfConfig":"39"},{"size":3309,"mtime":1611482262732,"results":"57","hashOfConfig":"39"},{"size":7710,"mtime":1611585411677,"results":"58","hashOfConfig":"39"},{"size":4323,"mtime":1611585411677,"results":"59","hashOfConfig":"39"},{"size":7191,"mtime":1611585411672,"results":"60","hashOfConfig":"39"},{"size":2773,"mtime":1611482262732,"results":"61","hashOfConfig":"39"},{"size":3505,"mtime":1611482262727,"results":"62","hashOfConfig":"39"},{"size":4048,"mtime":1611482262732,"results":"63","hashOfConfig":"39"},{"size":4000,"mtime":1611482262727,"results":"64","hashOfConfig":"39"},{"size":2496,"mtime":1611585411674,"results":"65","hashOfConfig":"39"},{"size":3404,"mtime":1611585411668,"results":"66","hashOfConfig":"39"},{"size":2140,"mtime":1611585499685,"results":"67","hashOfConfig":"39"},{"size":1214,"mtime":1611585411676,"results":"68","hashOfConfig":"39"},{"size":3925,"mtime":1611585411671,"results":"69","hashOfConfig":"39"},{"size":2235,"mtime":1611585411673,"results":"70","hashOfConfig":"39"},{"size":3399,"mtime":1611585411675,"results":"71","hashOfConfig":"39"},{"size":3311,"mtime":1611585411673,"results":"72","hashOfConfig":"39"},{"size":6935,"mtime":1611585411685,"results":"73","hashOfConfig":"39"},{"size":549,"mtime":1611585411672,"results":"74","hashOfConfig":"39"},{"size":2126,"mtime":1611585411674,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"co8l1l",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"78"},"D:\\Projects\\dealer_front\\src\\index.tsx",[],["170","171"],"D:\\Projects\\dealer_front\\src\\routes.tsx",[],"D:\\Projects\\dealer_front\\src\\store\\index.ts",["172"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { authReducer } from \"../reducers/auth\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n    const middlewares = [ thunkMiddleware];\r\n    const middleWareEnhancer = applyMiddleware(...middlewares);\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        composeWithDevTools(middleWareEnhancer)\r\n    )\r\n\r\n    return store\r\n}","D:\\Projects\\dealer_front\\src\\pages\\Main.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\Clinics.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\Login.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\ProjectsList.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\CompanyProfile.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\Coworkers.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\User.tsx",[],"D:\\Projects\\dealer_front\\src\\pages\\NewOffer.tsx",["173"],"import React from 'react'\r\nimport ToolsOffersSidebar from '../components/ToolsOffersSidebar'\r\nfunction NewOffer() {\r\n    // TestData\r\n    const [authorised, setAuthorised] = React.useState([\r\n        {\r\n            id: 0,\r\n            parent: null,\r\n            name: 'Рентгеновский аппарат Listem REX-650RF: FLUOROSCOPY',\r\n            image: 'https://ds-med.ru/wp-content/uploads/2019/05/850-650-RF222-2.png',\r\n            wiki: 'https://ds-med.ru/product/listem-rex-650rf-fluoroscopy/'\r\n        },\r\n        {\r\n            id: 1,\r\n            parent: null,\r\n            category: 1,\r\n            name: 'Цифровой рентгеновский аппарат Listem PROGEN-650R: DRS',\r\n            image: 'https://ds-med.ru/wp-content/uploads/2020/04/650-R-DRS.png',\r\n            wiki: 'https://ds-med.ru/product/listem-progen-650r-drs/'\r\n        },\r\n        {\r\n            id: 2,\r\n            parent: 0,\r\n            category: 1,\r\n            name: 'Кресло врача',\r\n            image: 'https://ds-med.ru/wp-content/uploads/2020/04/650-R-DRS.png',\r\n            wiki: 'https://ds-med.ru/product/listem-progen-650r-drs/'\r\n        },\r\n        {\r\n            id: 3,\r\n            parent: 0,\r\n            category: 1,\r\n            name: 'Рабочее место врача',\r\n            image: 'https://ds-med.ru/wp-content/uploads/2020/04/650-R-DRS.png',\r\n            wiki: 'https://ds-med.ru/product/listem-progen-650r-drs/'\r\n        },\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            <ToolsOffersSidebar\r\n                authorised={authorised}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewOffer","D:\\Projects\\dealer_front\\src\\layouts\\mainLayout.tsx",["174","175","176","177","178","179","180","181"],"import React, {useState} from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MailIcon from '@material-ui/icons/MailOutline';\r\nimport UserDropdown from '../components/UserDropdown'\r\nimport { MainListItems } from '../components/MenuItems';\r\nimport { layoutStyles } from './layoutStyles'\r\n\r\nimport NotificationsMenu from '../components/NotificationsMenu'\r\nimport MailsMenu from '../components/MailsMenu'\r\n\r\nfunction MainLayout({children}) {\r\n    const classes = layoutStyles();\r\n    const [open, setOpen] = useState(true);\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              DS.Med\r\n            </Typography>\r\n\r\n            <NotificationsMenu />\r\n            \r\n            <MailsMenu />\r\n            \r\n            \r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n          <UserDropdown />\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List><MainListItems /></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            {children}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MainLayout","D:\\Projects\\dealer_front\\src\\pages\\Project.tsx",[],"D:\\Projects\\dealer_front\\src\\layouts\\emptyLayout.tsx",[],"D:\\Projects\\dealer_front\\src\\layouts\\layoutStyles.tsx",["182"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport const layoutStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n  }));","D:\\Projects\\dealer_front\\src\\components\\Slider.tsx",["183","184"],"import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport { Paper, Button, SliderClassKey, Typography } from '@material-ui/core'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      width: \"100vw\",\r\n      height: \"40vh\",\r\n      position: \"relative\"\r\n    },\r\n    sliderImage: {\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n        position: \"absolute\"\r\n    }\r\n  }),\r\n);\r\n\r\nfunction Slider(props)\r\n{\r\n    var items = [\r\n        {\r\n            name: \"Рентген-аппараты\",\r\n            description: \"Скидка 40% при заказе до 30 января 2021 года!\",\r\n            image: \"https://ds-med.ru/wp-content/uploads/2020/05/listem-2.jpg\"\r\n        },\r\n        {\r\n            name: \"Мониторы пациента\",\r\n            description: \"Скидка 40% при заказе до 30 января 2021 года!\",\r\n            image: \"https://ds-med.ru/wp-content/uploads/2020/05/votem-2.jpg\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <Carousel>\r\n            {\r\n                items.map( (item, i) => <Item key={i} item={item} /> )\r\n            }\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nfunction Item(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <img src={props.item.image} alt=\"...\" className={classes.sliderImage}/>\r\n            <Button type=\"button\" variant=\"contained\" color=\"primary\">\r\n                Создать проект\r\n            </Button>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Slider","D:\\Projects\\dealer_front\\src\\components\\ProjectOne.tsx",["185"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport CommercialOfferList from \"./ModalCommercialOffer\"\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    gridInfo: {\r\n        background: \"#D6D2C4\"\r\n    },\r\n\r\n    gridTools: {\r\n        \r\n    },\r\n\r\n    gridButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        background: \"#D6D2C4\"\r\n    }\r\n  }),\r\n);\r\n\r\nfunction ProjectOne() {\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} lg={3} className={classes.gridInfo}>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        # 0000000000\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Зарегистрирован 4.01.2021\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Дилер: ООО \"ААА\" \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Сотрудник: Иванов Иван Иванович \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Клиент: \"Доктор Айболит\", г.Москва \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Актуализирован: 10.01.2021\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        В реестре до 20.02.2021 \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Менеджер: Даэсмедов Михаил Алексеевич \r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={6} className={classes.gridTools}>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Авторизовано\r\n                    </Typography>\r\n                    \r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Рентгеновский аппарат Listem REX-650RF: FLUOROSCOPY\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Многофункциональный монитор пациента Votem VP-1200 \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Рентгеновский аппарат Listem REX-650RF: FLUOROSCOPY\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Многофункциональный монитор пациента Votem VP-1200 \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Рентгеновский аппарат Listem REX-650RF: FLUOROSCOPY\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Многофункциональный монитор пациента Votem VP-1200 \r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Рентгеновский аппарат Listem REX-650RF: FLUOROSCOPY\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Многофункциональный монитор пациента Votem VP-1200 \r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={3} className={classes.gridButtons}>\r\n\r\n                    <CommercialOfferList />\r\n                    \r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Скачать КП дилера\r\n                    </Button>\r\n\r\n                    <Link to=\"/newproject\">\r\n                        <Button variant=\"contained\" color=\"primary\">\r\n                            Подробнее о проекте\r\n                        </Button>\r\n                    </Link>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Чат с менеджером\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ProjectOne","D:\\Projects\\dealer_front\\src\\components\\Chart.tsx",["186"],"import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, XAxis, YAxis, CartesianGrid, Line, ResponsiveContainer } from 'recharts';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainChart: {\r\n      width: \"100%\",\r\n      height: 300,\r\n      padding: theme.spacing(3)\r\n    }\r\n  }),\r\n);\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nexport default function Chart() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.mainChart}>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Статистика продаж\r\n      </Typography>\r\n      <ResponsiveContainer>\r\n        <LineChart \r\n        data={data}\r\n        margin={{\r\n          top: 10, right: 30, left: 0, bottom: 0,\r\n        }}\r\n        >\r\n          <XAxis dataKey=\"name\"/>\r\n          <YAxis/>\r\n          <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}","D:\\Projects\\dealer_front\\src\\components\\DataTable.tsx",["187","188","189","190","191","192"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport Icon from \"@material-ui/core/Icon\"\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport ContentCreate from \"@material-ui/icons/Create\";\r\nimport ActionDelete from \"@material-ui/icons/Delete\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\nimport Download from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { pink, grey, green, common } from \"@material-ui/core/colors\";\r\n\r\nconst grey500 = grey[\"500\"];\r\nconst green400 = green[\"400\"];\r\nconst white = common.white;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst styles = {\r\n  searchButton: {\r\n    marginRight: 20,\r\n  },\r\n  editButton: {\r\n    marginRight: \"1em\",\r\n    color: white,\r\n    backgroundColor: green400,\r\n  },\r\n  editButtonIcon: {\r\n    fill: white,\r\n  },\r\n  deleteButton: {\r\n    color: \"grey\",\r\n    fill: grey500,\r\n  },\r\n  columns: {\r\n    width10: {\r\n      width: \"10%\",\r\n    },\r\n  },\r\n  row: {\r\n    margin: \"1.5em\",\r\n    width: \"95%\",\r\n  },\r\n  pagination: {\r\n    width: 350,\r\n    margin: \"0 auto\",\r\n    paddingTop: 10,\r\n  },\r\n};\r\n\r\ninterface DataTableProps {\r\n  model?: string;\r\n  headers?: string[],\r\n  rows: Object,\r\n  actions?: string[]\r\n}\r\n\r\nfunction ActionReturner({actionName}) {\r\n  if (actionName === 'edit') {\r\n    return (\r\n      <Tooltip title=\"Edit\" aria-label=\"edit\">\r\n        <Fab\r\n          size=\"small\"\r\n          style={styles.editButton}\r\n        >\r\n          <ContentCreate />\r\n        </Fab>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  if (actionName === 'delete') {\r\n    return (\r\n      <Tooltip title=\"Delete\" aria-label=\"delete\">\r\n        <Fab\r\n          size=\"small\"\r\n          style={styles.deleteButton}\r\n        >\r\n          <ActionDelete />\r\n        </Fab>\r\n      </Tooltip>\r\n    )\r\n  }\r\n  if (actionName === 'download') {\r\n    return (\r\n      <Tooltip title=\"Download\" aria-label=\"download\">\r\n        <Fab\r\n          size=\"small\"\r\n          style={styles.deleteButton}\r\n        >\r\n          <Download />\r\n        </Fab>\r\n      </Tooltip>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function DataTable<DataTableProps>({headers, rows, actions}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers ? headers.map(item => <TableCell>{item}</TableCell>) : null}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n                {row.cells.map( elem => <TableCell>{elem}</TableCell>)}\r\n                {actions ? actions.map( act => <ActionReturner actionName={act} />) : null}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","D:\\Projects\\dealer_front\\src\\components\\ToolsOffersSidebar.tsx",["193","194","195","196"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport CommercialOfferOne from '../components/CommercialOfferOne'\r\nimport AuthorisedPosition from './AuthorisedPosition'\r\nimport { isTypeNode } from 'typescript';\r\n\r\nconst drawerWidth = 500;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: \"column\",\r\n      alignItems: 'flex-start',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      zIndex: 9999\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-start',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginRight: theme.spacing(3),\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginRight: drawerWidth + theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PersistentDrawerRight({ authorised }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [addedTools, setAddedTools] = React.useState([])\r\n  const [selectedCategory, setSelectedCategory] = React.useState(0)\r\n  const [positionsTree, setPositionsTree] = React.useState([])\r\n  const [offersTree, setOffersTree] = React.useState([])\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    if (authorised && authorised.length !== 0) {\r\n      setPositionsTree(treeBuilding(authorised))\r\n    }\r\n  }, [authorised])\r\n\r\n  React.useEffect(() => {\r\n    setOffersTree(treeBuilding(addedTools))\r\n  }, [addedTools])\r\n\r\n  // функция строит дерево, O(n^2)\r\n  function treeBuilding(arr: Array<any>) {\r\n    let roots = []\r\n    arr.forEach( item => {\r\n      if (item.parent === null) {\r\n        item.children = arr.filter( elem => elem.parent === item.id)\r\n        roots.push(item)\r\n      }\r\n    })\r\n    return roots\r\n  }\r\n\r\n  // Добавление из авторизованных в КП\r\n  // Валидация: если id уже есть в КП -> не добавлять\r\n  function positionSelectHandler(item) {\r\n    console.log(item)\r\n    const idx = addedTools.findIndex(obj => obj.id === item.id)\r\n    if(idx === -1) {\r\n      let currentTools = addedTools.splice(0)\r\n      let {children, ...handledItem} = item\r\n      currentTools.push(handledItem)\r\n      setAddedTools(currentTools)\r\n    }\r\n  }\r\n\r\n  // Удалить КП и его дочерние компоненты, если существуют\r\n  function deleteTool(id) {\r\n    let currentTools = addedTools.splice(0)\r\n    // Это работает, но некрасиво\r\n    const idx = currentTools.findIndex(obj => obj.id === id)\r\n    let newTools\r\n    if (idx > -1) {\r\n      currentTools.splice(idx, 1);\r\n      newTools = currentTools.filter(obj => obj.parent !== id)\r\n    }\r\n    setAddedTools(newTools)\r\n  }\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`wrapped-tabpanel-${index}`}\r\n        aria-labelledby={`wrapped-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `wrapped-tab-${index}`,\r\n      'aria-controls': `wrapped-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Button onClick={() => setOpen(!open)} variant=\"contained\" color=\"primary\">Выбрать оборудование</Button>\r\n\r\n        <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n        classes={{\r\n            paper: classes.drawerPaper,\r\n        }}\r\n        >\r\n            <List>\r\n            <Typography>\r\n                Авторизованное оборудование\r\n            </Typography>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={0}\r\n            >\r\n                <MenuItem value={0}>Все</MenuItem>\r\n                <MenuItem value={1}>Рентген-аппараты</MenuItem>\r\n                <MenuItem value={2}>Мониторы пациента</MenuItem>\r\n                <MenuItem value={3}>Мамммографы</MenuItem>\r\n            </Select>\r\n                {positionsTree ? positionsTree.map( position => (\r\n                  <AuthorisedPosition \r\n                    position={position}\r\n                    positionSelectHandler={positionSelectHandler}\r\n                  />\r\n                )) : null}\r\n            </List>\r\n        \r\n        </Drawer>\r\n        <main\r\n        className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n        })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <Tabs\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            aria-label=\"disabled tabs example\"\r\n            value={activeTab}\r\n            onChange={(e, newValue) => setActiveTab(newValue)}\r\n          >\r\n            <Tab label=\"Коммерческое предложение\" {...a11yProps(0)}/>\r\n            <Tab label=\"Рекомендованные\" {...a11yProps(1)}/>\r\n          </Tabs>\r\n\r\n          <TabPanel value={activeTab} index={0}>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={0}\r\n            >\r\n                <MenuItem value={0}>Все</MenuItem>\r\n                <MenuItem value={1}>Рентген-аппараты</MenuItem>\r\n                <MenuItem value={2}>Мониторы пациента</MenuItem>\r\n                <MenuItem value={3}>Мамммографы</MenuItem>\r\n            </Select>\r\n            {offersTree && offersTree.length !== 0 ? offersTree.map( tool => \r\n            <CommercialOfferOne\r\n            deleteTool={deleteTool}\r\n            offers={tool}\r\n            />) : <Typography>Нажмите \"Выбрать оборудование\", чтобы начать создание коммерческого предложения для клиента</Typography>}\r\n          </TabPanel>\r\n          <TabPanel value={activeTab} index={1}>\r\n            Здесь будут рекомендованные позиции по выбраным из авторизованных\r\n          </TabPanel>\r\n\r\n        </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\dealer_front\\src\\components\\UserDropdown.tsx",["197","198"],"import React from 'react'\r\nimport { Typography, Menu, Avatar, IconButton } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { blue, common } from \"@material-ui/core/colors\";\r\nimport SettingsPower from \"@material-ui/icons/SettingsPower\";\r\nimport VpnKey from \"@material-ui/icons/VpnKey\";\r\nimport ContentFilter from \"@material-ui/icons/FilterList\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst blue600 = blue[\"900\"];\r\nconst drawerWidth = 400;\r\n\r\nconst styles = {\r\ndrawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"rgba(227, 231, 232, 0.63)\",\r\n    overflow: \"auto\",\r\n},\r\navatarDiv: {\r\n    padding: \"15px 0 10px 10px\" as TODO,\r\n    width: 250,\r\n},\r\navatarIcon: {\r\n    float: \"left\" as TODO,\r\n    display: \"block\" as TODO,\r\n    marginRight: 15,\r\n    boxShadow: \"0px 0px 0px 3px rgba(0,0,0,0.2)\" as TODO,\r\n},\r\navatarSpan: {\r\n    paddingTop: 0,\r\n    display: \"block\",\r\n    color: \"purple\",\r\n    fontWeight: 400,\r\n    fontSize: 12,\r\n},\r\nuser: {\r\n    fontSize: 14,\r\n    color: common.black,\r\n},\r\nmenuItem: {\r\n    color: blue600,\r\n    fontWeight: 500,\r\n    paddingTop: \"0.2em\",\r\n    paddingBottom: \"0.2em\",\r\n    fontSize: 16,\r\n},\r\n};\r\n\r\nconst withMenu = ({\r\n    anchorEl,\r\n    open,\r\n    signoutClick,\r\n    changePassClick,\r\n    handleClose,\r\n  }) => (\r\n    <Menu\r\n      id=\"menu-appbar\"\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={signoutClick}>\r\n        <Link to=\"/user\">\r\n            <VpnKey />\r\n            <Typography style={{ paddingLeft: \"1em\" }} variant=\"inherit\">\r\n                Профиль\r\n            </Typography>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        <Link to=\"/Company\">\r\n            <VpnKey />\r\n            <Typography style={{ paddingLeft: \"1em\" }} variant=\"inherit\">\r\n                Страница организации\r\n            </Typography>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem onClick={changePassClick}>\r\n        <SettingsPower />\r\n        <Typography style={{ paddingLeft: \"1em\" }} variant=\"inherit\">\r\n          Выйти\r\n        </Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\ninterface AppUserMenuProps {\r\nusername?: string;\r\nonSignoutClick?: () => void;\r\nonChangePassClick?: () => void;\r\n}\r\n\r\nfunction UserDropdown<AppUserMenuProps>({\r\n    username = 'Даэсмедов Михаил',\r\n    onSignoutClick = () => console.log('signout'),\r\n    onChangePassClick = () => console.log('signin'),\r\n}) {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    \r\n    const signoutClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onSignoutClick();\r\n    };\r\n  \r\n    const changePassClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onChangePassClick();\r\n      handleClose()\r\n    };\r\n  \r\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log('click')\r\n    };\r\n    return (\r\n        <div style={styles.avatarDiv}>\r\n            <Avatar\r\n            src={\"https://peopletalk.ru/wp-content/uploads/2017/11/1480331127.jpg?opt=true\"}\r\n            style={styles.avatarIcon}\r\n            />\r\n            <span style={styles.avatarSpan}>\r\n            <Typography style={styles.user} variant=\"inherit\">\r\n                {username}\r\n            </Typography>\r\n    \r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"secondary\"\r\n            >\r\n                <ContentFilter />\r\n            </IconButton>\r\n            {withMenu({\r\n                anchorEl,\r\n                open,\r\n                signoutClick,\r\n                changePassClick,\r\n                handleClose,\r\n            })}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDropdown","D:\\Projects\\dealer_front\\src\\components\\CommercialOfferPositionMain.tsx",["199","200","201","202"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport ActionDelete from \"@material-ui/icons/Delete\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Icon from \"@material-ui/core/Icon\"\r\n\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport { makeStyles, createStyles, Theme, withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainPaper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n    },\r\n    secondaryPaper: {\r\n      marginBottom: theme.spacing(1),\r\n      padding: theme.spacing(2),\r\n      marginLeft: 30\r\n    },\r\n    table: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n  }),\r\n);\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRowDealer = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(even)': {\r\n        backgroundColor: \"#D6D2C4\",\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\nconst StyledTableRowClient = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(even)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nfunction CommercialOfferPositionMain({ primary, tool, deleteTool }) {\r\n  const basePrice: number = 300000\r\n  const [dealerDiscount, setDealerDiscount] = React.useState<number>(30)\r\n  const [dealerPrice, setDealerPrice] = React.useState<number>(basePrice - (basePrice/100)*dealerDiscount)\r\n\r\n  const [clientPrice, setClientPrice] = React.useState<number>(290000)\r\n  const [clientDiscount, setClientDiscount] = React.useState<number>(10)\r\n  const [count, setCount] = React.useState<number>(1)\r\n  const classes = useStyles()\r\n\r\n  function changeHandler(e) {\r\n    if (e.target.name === 'clientDiscount') {\r\n      setClientDiscount(e.target.value)\r\n      setClientPrice(basePrice - (basePrice * (e.target.value / 100)))\r\n    }\r\n    if (e.target.name === 'clientPrice') {\r\n      setClientPrice(e.target.value)\r\n      setClientDiscount((basePrice - e.target.value) / (basePrice / 100))\r\n    }\r\n    if (e.target.name === \"count\") {\r\n      setCount(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Paper className={primary ? classes.mainPaper : classes.secondaryPaper}>\r\n          <Grid container spacing={1}>\r\n              <Grid lg={3}  xs={6} item>\r\n                  <Typography variant=\"subtitle1\" paragraph>\r\n                      {tool && tool.name ? tool.name : null}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" paragraph>\r\n                      Количество\r\n                  </Typography>\r\n                  <Input type=\"number\" defaultValue={1} name=\"count\" onChange={changeHandler}/>\r\n              </Grid>\r\n              <Grid lg={4} xs={12} item>\r\n                  <Table className={classes.table} aria-label=\"customized table\">\r\n                      <TableBody>\r\n                          <StyledTableRowDealer>\r\n                              <StyledTableCell>Розничная цена(ед)</StyledTableCell>\r\n                              <StyledTableCell>{basePrice}</StyledTableCell>\r\n                          </StyledTableRowDealer>\r\n                          <StyledTableRowDealer>\r\n                              <StyledTableCell>Скидка дилеру</StyledTableCell>\r\n                              <StyledTableCell>{dealerDiscount} %</StyledTableCell>\r\n                          </StyledTableRowDealer>\r\n                          <StyledTableRowDealer>\r\n                              <StyledTableCell>Цена для дилера</StyledTableCell>\r\n                              <StyledTableCell>{dealerPrice} ₽</StyledTableCell>\r\n                          </StyledTableRowDealer>\r\n\r\n                          <StyledTableRowDealer>\r\n                              <StyledTableCell>Итого для дилера</StyledTableCell>\r\n                              <StyledTableCell>{dealerPrice * count} ₽</StyledTableCell>\r\n                          </StyledTableRowDealer>\r\n                      </TableBody>\r\n                  </Table>\r\n              </Grid>\r\n              <Grid lg={4} xs={12} item>\r\n                  <Table className={classes.table} aria-label=\"customized table\">\r\n                      <TableBody>\r\n                          <StyledTableRowClient>\r\n                              <StyledTableCell>Розничная цена(ед)</StyledTableCell>\r\n                              <StyledTableCell>{basePrice} ₽</StyledTableCell>\r\n                          </StyledTableRowClient>\r\n                          <StyledTableRowClient>\r\n                              <StyledTableCell>Скидка клиенту</StyledTableCell>\r\n                              <StyledTableCell>\r\n                                <Input \r\n                                type=\"number\" \r\n                                value={clientDiscount}\r\n                                name=\"clientDiscount\"\r\n                                onChange={changeHandler}\r\n                                />\r\n                              </StyledTableCell>\r\n                          </StyledTableRowClient>\r\n                          <StyledTableRowClient>\r\n                              <StyledTableCell>Цена для клиента</StyledTableCell>\r\n                              <StyledTableCell>\r\n                                <Input \r\n                                type=\"text\" \r\n                                value={clientPrice}\r\n                                name=\"clientPrice\"\r\n                                onChange={changeHandler}\r\n                                />\r\n                              </StyledTableCell>\r\n                          </StyledTableRowClient>\r\n\r\n                          <StyledTableRowClient>\r\n                              <StyledTableCell>Итого для клиента</StyledTableCell>\r\n                              <StyledTableCell>{clientPrice * count} ₽</StyledTableCell>\r\n                          </StyledTableRowClient>\r\n                      </TableBody>\r\n                  </Table>                    \r\n              </Grid>\r\n              <Grid md={12} sm={12} xs={12} lg={1} item>\r\n              <Tooltip title=\"Удалить\" aria-label=\"delete\" onClick={() => deleteTool(tool.id)}>\r\n                <Fab\r\n                  size=\"small\"\r\n                >\r\n                  <ActionDelete />\r\n                </Fab>\r\n              </Tooltip>\r\n              </Grid>\r\n          </Grid>\r\n      </Paper>\r\n  );\r\n}\r\n\r\nexport default CommercialOfferPositionMain","D:\\Projects\\dealer_front\\src\\components\\MenuItems.tsx",["203","204","205","206","207","208","209","210","211","212","213","214","215"],"import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Typography, ListItemIcon } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nconst blue600 = blue[\"800\"];\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    menuItem: {\r\n      color: \"black\",\r\n      fontWeight: 800,\r\n      paddingTop: \"0.2em\",\r\n      paddingBottom: \"0.2em\",\r\n      fontSize: 16,\r\n    },\r\n  })\r\n);\r\n\r\n\r\nexport function MainListItems() {\r\n    const [active, setActive] = useState('main')\r\n    const styles = useStyles();\r\n\r\n    function clickHandler(e, data) {\r\n        console.log(data)\r\n    }\r\n    return (\r\n    <div>\r\n    <Link key={`link_1`} to=\"/\" className=\"MuiListItem-button\">\r\n        <MenuItem key={1} className={styles.menuItem }>\r\n            <ListItemIcon ><DashboardIcon /></ListItemIcon>\r\n            <ListItemText primary=\"Главная\"/>\r\n        </MenuItem>\r\n    </Link>\r\n\r\n    <Link key={`link_1`} to=\"/projects\" className=\"MuiListItem-button\">\r\n        <MenuItem key={2} className={styles.menuItem}>\r\n        <ListItemIcon ><DashboardIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Управление проектами\"/>\r\n        </MenuItem>\r\n    </Link>\r\n\r\n    <Link key={`link_1`} to=\"/newproject\" className=\"MuiListItem-button\">\r\n        <MenuItem key={3} className={styles.menuItem}>\r\n        <ListItemIcon ><DashboardIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Новый проект\"/>\r\n        </MenuItem>\r\n    </Link>\r\n\r\n    <Link key={`link_1`} to=\"/coworkers\" className=\"MuiListItem-button\">\r\n        <MenuItem key={4} className={styles.menuItem}>\r\n        <ListItemIcon ><DashboardIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Сотрудники\"/>\r\n        </MenuItem>\r\n    </Link>\r\n\r\n    <Link key={`link_1`} to=\"/clinics\" className=\"MuiListItem-button\">\r\n        <MenuItem key={5} className={styles.menuItem}>\r\n        <ListItemIcon ><DashboardIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Лечебные учреждения\"/>\r\n        </MenuItem>\r\n    </Link>      \r\n    </div>\r\n    )\r\n}\r\n","D:\\Projects\\dealer_front\\src\\components\\CompanyReq.tsx",[],"D:\\Projects\\dealer_front\\src\\components\\ToolsTable.tsx",["216","217"],"import React from 'react'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n  }),\r\n);\r\n\r\nfunction createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\n\r\nfunction AccordionOfTools(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                <Typography className={classes.heading}>{props.categoryName}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                <Typography>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Dessert (100g serving)</TableCell>\r\n                        <TableCell align=\"right\">Calories</TableCell>\r\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n                </Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction ToolsTable() {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Typography component=\"h2\" variant=\"h4\" align=\"center\">\r\n                Авторизуемое оборудование\r\n            </Typography>\r\n            <AccordionOfTools categoryName={\"Рентген аппараты\"}/>\r\n            <AccordionOfTools categoryName={\"Мониторы пациента\"}/>\r\n            <AccordionOfTools categoryName={\"ЛОР-комбайны\"}/>\r\n            <AccordionOfTools categoryName={\"Маммографы\"}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ToolsTable","D:\\Projects\\dealer_front\\src\\components\\CustomerReq.tsx",["218"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nfunction CustomerReq() {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                Реквизиты клиента\r\n            </Typography>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    required\r\n                    id=\"clinicName\"\r\n                    name=\"clinicName\"\r\n                    label=\"Название клиники\"\r\n                    fullWidth\r\n                    autoComplete=\"given-name\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    required\r\n                    id=\"inn\"\r\n                    name=\"inn\"\r\n                    label=\"ИНН\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-line1\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <TextField\r\n                    id=\"urname\"\r\n                    name=\"urname\"\r\n                    label=\"Наименование юр.лица клиники\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-line2\"\r\n                />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"country\"\r\n                    name=\"country\"\r\n                    label=\"Страна\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping country\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField \r\n                    id=\"state\" \r\n                    name=\"state\" \r\n                    label=\"Регион\" \r\n                    fullWidth \r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"city\"\r\n                    name=\"city\"\r\n                    label=\"Город\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping address-level2\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"zip\"\r\n                    name=\"zip\"\r\n                    label=\"Улица\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"zip\"\r\n                    name=\"zip\"\r\n                    label=\"Дом\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                    required\r\n                    id=\"zip\"\r\n                    name=\"zip\"\r\n                    label=\"Офис/Помещение\"\r\n                    fullWidth\r\n                    autoComplete=\"shipping postal-code\"\r\n                />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                <FormControlLabel\r\n                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                    label=\"Государственная клиника\"\r\n                />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomerReq","D:\\Projects\\dealer_front\\src\\components\\ModalCommercialOffer.tsx",[],"D:\\Projects\\dealer_front\\src\\components\\AuthorisedPosition.tsx",[],"D:\\Projects\\dealer_front\\src\\reducers\\auth.ts",[],"D:\\Projects\\dealer_front\\src\\components\\Search.tsx",["219"],"import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nfunction Search() {\r\n    return (\r\n        <div style={{\r\n            display: \"flex\",\r\n            marginBottom: '1em'\r\n        }}>\r\n            <Select\r\n                value={0}\r\n                id=\"select\"\r\n            >   \r\n                <MenuItem value={0}>Все</MenuItem>\r\n                <MenuItem value={1}>По ИНН</MenuItem>\r\n                <MenuItem value={2}>По КЛАДР</MenuItem>\r\n                <MenuItem value={3}>По оборудованию</MenuItem>\r\n                <MenuItem value={3}>По типу оборудования</MenuItem>\r\n                <MenuItem value={3}>По датам</MenuItem>\r\n                <MenuItem value={3}>По названию ЛУ</MenuItem>\r\n            </Select>\r\n\r\n            <TextField\r\n                fullWidth\r\n                label=\"Поиск\"\r\n                style={{\r\n                    marginLeft: \"1em\"\r\n                }}\r\n              />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","D:\\Projects\\dealer_front\\src\\components\\ClinicOne.tsx",["220","221"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    gridInfo: {\r\n        background: \"gray\"\r\n    },\r\n\r\n    gridTools: {\r\n        \r\n    },\r\n\r\n    gridButtons: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        background: \"gray\"\r\n    }\r\n  }),\r\n);\r\n\r\nfunction ClinicOne() {\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} lg={3} className={classes.gridInfo}>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        ProMED\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        г. Москва, ул.Пушкина, д.1, к.1\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        ИНН: 123456789000\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Юр. лицо: ООО “Промед”\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={6} className={classes.gridTools}>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проекты учреждения\r\n                    </Typography>\r\n                    \r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021 (завершено 30.02.2021)\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021 (завершено 30.02.2021)\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021 (завершено 30.02.2021)\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" paragraph>\r\n                        Проект №239475874576 от 10.01.2021 (завершено 30.02.2021)\r\n                    </Typography>\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} lg={3} className={classes.gridButtons}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Удалить\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Забронированное оборудование\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Изменить\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ClinicOne","D:\\Projects\\dealer_front\\src\\components\\CompanyCard.tsx",[],"D:\\Projects\\dealer_front\\src\\components\\NotificationsMenu.tsx",["222","223","224","225","226"],"import React from 'react'\r\nimport { Typography, Menu, Avatar, IconButton } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { blue, common } from \"@material-ui/core/colors\";\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst blue600 = blue[\"900\"];\r\nconst drawerWidth = 400;\r\n\r\nconst styles = {\r\ndrawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"rgba(227, 231, 232, 0.63)\",\r\n    overflow: \"auto\",\r\n},\r\navatarDiv: {\r\n    padding: \"15px 0 10px 10px\" as TODO,\r\n    width: 250\r\n},\r\navatarIcon: {\r\n    float: \"left\" as TODO,\r\n    display: \"block\" as TODO,\r\n    marginRight: 15,\r\n    boxShadow: \"0px 0px 0px 8px rgba(0,0,0,0.2)\" as TODO,\r\n},\r\navatarSpan: {\r\n    paddingTop: 0,\r\n    display: \"block\",\r\n    color: \"purple\",\r\n    fontWeight: 400,\r\n    fontSize: 12,\r\n    textShadow: \"1px 1px #444\",\r\n},\r\nuser: {\r\n    fontSize: 14,\r\n    color: common.white,\r\n},\r\nmenuItem: {\r\n    color: blue600,\r\n    fontWeight: 500,\r\n    paddingTop: \"0.2em\",\r\n    paddingBottom: \"0.2em\",\r\n    fontSize: 16,\r\n},\r\n};\r\n\r\nconst withMenu = ({\r\n    anchorEl,\r\n    open,\r\n    signoutClick,\r\n    changePassClick,\r\n    handleClose,\r\n  }) => (\r\n    <Menu\r\n      id=\"menu-appbar\"\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={signoutClick}>\r\n        Уведомление\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Уведомление\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Уведомление\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Уведомление\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\ninterface NotificationsMenuProps {\r\nusername?: string;\r\nonSignoutClick?: () => void;\r\nonChangePassClick?: () => void;\r\n}\r\n\r\nfunction NotificationsMenu<NotificationsMenuProps>({\r\n    username = 'Даэсмедов Михаил',\r\n    onSignoutClick = () => console.log('signout'),\r\n    onChangePassClick = () => console.log('signin'),\r\n}) {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    \r\n    const signoutClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onSignoutClick();\r\n    };\r\n  \r\n    const changePassClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onChangePassClick();\r\n      handleClose()\r\n    };\r\n  \r\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log('click')\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton color=\"inherit\" onClick={handleMenu}>\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            {withMenu({\r\n                anchorEl,\r\n                open,\r\n                signoutClick,\r\n                changePassClick,\r\n                handleClose,\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotificationsMenu","D:\\Projects\\dealer_front\\src\\components\\MailsMenu.tsx",["227","228","229","230","231"],"import React from 'react'\r\nimport { Typography, Menu, Avatar, IconButton } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { blue, common } from \"@material-ui/core/colors\";\r\nimport MailIcon from '@material-ui/icons/MailOutline';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst blue600 = blue[\"900\"];\r\nconst drawerWidth = 400;\r\n\r\nconst styles = {\r\ndrawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"rgba(227, 231, 232, 0.63)\",\r\n    overflow: \"auto\",\r\n},\r\navatarDiv: {\r\n    padding: \"15px 0 10px 10px\" as TODO,\r\n    width: 250\r\n},\r\navatarIcon: {\r\n    float: \"left\" as TODO,\r\n    display: \"block\" as TODO,\r\n    marginRight: 15,\r\n    boxShadow: \"0px 0px 0px 8px rgba(0,0,0,0.2)\" as TODO,\r\n},\r\navatarSpan: {\r\n    paddingTop: 0,\r\n    display: \"block\",\r\n    color: \"purple\",\r\n    fontWeight: 400,\r\n    fontSize: 12,\r\n    textShadow: \"1px 1px #444\",\r\n},\r\nuser: {\r\n    fontSize: 14,\r\n    color: common.white,\r\n},\r\nmenuItem: {\r\n    color: blue600,\r\n    fontWeight: 500,\r\n    paddingTop: \"0.2em\",\r\n    paddingBottom: \"0.2em\",\r\n    fontSize: 16,\r\n},\r\n};\r\n\r\nconst withMenu = ({\r\n    anchorEl,\r\n    open,\r\n    signoutClick,\r\n    changePassClick,\r\n    handleClose,\r\n  }) => (\r\n    <Menu\r\n      id=\"menu-appbar\"\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={signoutClick}>\r\n        Почта\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Почта\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Почта\r\n      </MenuItem>\r\n      <MenuItem onClick={signoutClick}>\r\n        Почта\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\ninterface MailsMenuProps {\r\n    username?: string;\r\n    onSignoutClick?: () => void;\r\n    onChangePassClick?: () => void;\r\n}\r\n\r\nfunction MailsMenu<MailsMenuProps>({\r\n    username = 'Даэсмедов Михаил',\r\n    onSignoutClick = () => console.log('signout'),\r\n    onChangePassClick = () => console.log('signin'),\r\n}) {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    \r\n    const signoutClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onSignoutClick();\r\n    };\r\n  \r\n    const changePassClick = (event: React.ChangeEvent<unknown>) => {\r\n      event.preventDefault();\r\n      onChangePassClick();\r\n      handleClose()\r\n    };\r\n  \r\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n      console.log('click')\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton color=\"inherit\" onClick={handleMenu}>\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            {withMenu({\r\n                anchorEl,\r\n                open,\r\n                signoutClick,\r\n                changePassClick,\r\n                handleClose,\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MailsMenu","D:\\Projects\\dealer_front\\src\\store\\types.ts",[],"D:\\Projects\\dealer_front\\src\\components\\CommercialOfferOne.tsx",[],"D:\\Projects\\dealer_front\\src\\components\\ModalCompanyInfo.tsx",["232","233"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataTable from \"./DataTable\"\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      \r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ModalCompanyInfo() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Управление КП для клиента</h2>\r\n        <p>\r\n            Тут будут поля с подробной информацией об организации\r\n        </p>\r\n      \r\n        <Button type=\"button\" variant=\"contained\" color=\"primary\">\r\n          Сохранить\r\n        </Button>\r\n        <Button type=\"button\" variant=\"contained\" color=\"primary\" onClick={() => setOpen(false)}>\r\n          Отменить\r\n        </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"button\" onClick={handleOpen} variant=\"contained\" color=\"primary\">\r\n        Подробнее\r\n      </Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":40,"nodeType":"240","messageId":"241","endLine":1,"endColumn":55},{"ruleId":"238","severity":1,"message":"242","line":5,"column":24,"nodeType":"240","messageId":"241","endLine":5,"endColumn":37},{"ruleId":"238","severity":1,"message":"243","line":3,"column":10,"nodeType":"240","messageId":"241","endLine":3,"endColumn":20},{"ruleId":"238","severity":1,"message":"244","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":11},{"ruleId":"238","severity":1,"message":"245","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":13},{"ruleId":"238","severity":1,"message":"246","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":12},{"ruleId":"238","severity":1,"message":"247","line":16,"column":8,"nodeType":"240","messageId":"241","endLine":16,"endColumn":13},{"ruleId":"238","severity":1,"message":"248","line":17,"column":8,"nodeType":"240","messageId":"241","endLine":17,"endColumn":12},{"ruleId":"238","severity":1,"message":"249","line":20,"column":8,"nodeType":"240","messageId":"241","endLine":20,"endColumn":25},{"ruleId":"238","severity":1,"message":"250","line":21,"column":8,"nodeType":"240","messageId":"241","endLine":21,"endColumn":16},{"ruleId":"238","severity":1,"message":"251","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"238","severity":1,"message":"252","line":3,"column":25,"nodeType":"240","messageId":"241","endLine":3,"endColumn":39},{"ruleId":"238","severity":1,"message":"253","line":3,"column":41,"nodeType":"240","messageId":"241","endLine":3,"endColumn":51},{"ruleId":"238","severity":1,"message":"254","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":17},{"ruleId":"238","severity":1,"message":"255","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":18},{"ruleId":"238","severity":1,"message":"256","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":12},{"ruleId":"238","severity":1,"message":"257","line":16,"column":8,"nodeType":"240","messageId":"241","endLine":16,"endColumn":19},{"ruleId":"238","severity":1,"message":"258","line":17,"column":8,"nodeType":"240","messageId":"241","endLine":17,"endColumn":14},{"ruleId":"238","severity":1,"message":"259","line":20,"column":10,"nodeType":"240","messageId":"241","endLine":20,"endColumn":14},{"ruleId":"238","severity":1,"message":"260","line":64,"column":11,"nodeType":"240","messageId":"241","endLine":64,"endColumn":25},{"ruleId":"238","severity":1,"message":"260","line":110,"column":35,"nodeType":"240","messageId":"241","endLine":110,"endColumn":49},{"ruleId":"238","severity":1,"message":"261","line":15,"column":10,"nodeType":"240","messageId":"241","endLine":15,"endColumn":20},{"ruleId":"238","severity":1,"message":"262","line":68,"column":9,"nodeType":"240","messageId":"241","endLine":68,"endColumn":14},{"ruleId":"238","severity":1,"message":"263","line":71,"column":10,"nodeType":"240","messageId":"241","endLine":71,"endColumn":26},{"ruleId":"238","severity":1,"message":"264","line":71,"column":28,"nodeType":"240","messageId":"241","endLine":71,"endColumn":47},{"ruleId":"238","severity":1,"message":"265","line":96,"column":11,"nodeType":"240","messageId":"241","endLine":96,"endColumn":27},{"ruleId":"238","severity":1,"message":"265","line":102,"column":23,"nodeType":"240","messageId":"241","endLine":102,"endColumn":39},{"ruleId":"238","severity":1,"message":"266","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"256","line":15,"column":8,"nodeType":"240","messageId":"241","endLine":15,"endColumn":12},{"ruleId":"238","severity":1,"message":"267","line":72,"column":26,"nodeType":"240","messageId":"241","endLine":72,"endColumn":43},{"ruleId":"238","severity":1,"message":"268","line":73,"column":23,"nodeType":"240","messageId":"241","endLine":73,"endColumn":37},{"ruleId":"238","severity":1,"message":"269","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":16},{"ruleId":"238","severity":1,"message":"270","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":21},{"ruleId":"238","severity":1,"message":"271","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":24},{"ruleId":"238","severity":1,"message":"272","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":18},{"ruleId":"238","severity":1,"message":"273","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":20},{"ruleId":"238","severity":1,"message":"274","line":9,"column":8,"nodeType":"240","messageId":"241","endLine":9,"endColumn":18},{"ruleId":"238","severity":1,"message":"275","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":22},{"ruleId":"238","severity":1,"message":"253","line":14,"column":10,"nodeType":"240","messageId":"241","endLine":14,"endColumn":20},{"ruleId":"238","severity":1,"message":"276","line":16,"column":22,"nodeType":"240","messageId":"241","endLine":16,"endColumn":27},{"ruleId":"238","severity":1,"message":"277","line":18,"column":7,"nodeType":"240","messageId":"241","endLine":18,"endColumn":14},{"ruleId":"238","severity":1,"message":"278","line":34,"column":12,"nodeType":"240","messageId":"241","endLine":34,"endColumn":18},{"ruleId":"238","severity":1,"message":"279","line":34,"column":20,"nodeType":"240","messageId":"241","endLine":34,"endColumn":29},{"ruleId":"238","severity":1,"message":"280","line":37,"column":14,"nodeType":"240","messageId":"241","endLine":37,"endColumn":26},{"ruleId":"238","severity":1,"message":"281","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":22},{"ruleId":"238","severity":1,"message":"282","line":92,"column":11,"nodeType":"240","messageId":"241","endLine":92,"endColumn":18},{"ruleId":"238","severity":1,"message":"247","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":13},{"ruleId":"238","severity":1,"message":"283","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":18},{"ruleId":"238","severity":1,"message":"254","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":17},{"ruleId":"238","severity":1,"message":"248","line":7,"column":10,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"238","severity":1,"message":"253","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":20},{"ruleId":"238","severity":1,"message":"284","line":2,"column":28,"nodeType":"240","messageId":"241","endLine":2,"endColumn":34},{"ruleId":"238","severity":1,"message":"285","line":11,"column":7,"nodeType":"240","messageId":"241","endLine":11,"endColumn":13},{"ruleId":"238","severity":1,"message":"286","line":85,"column":11,"nodeType":"240","messageId":"241","endLine":85,"endColumn":33},{"ruleId":"238","severity":1,"message":"286","line":91,"column":28,"nodeType":"240","messageId":"241","endLine":91,"endColumn":50},{"ruleId":"238","severity":1,"message":"253","line":2,"column":10,"nodeType":"240","messageId":"241","endLine":2,"endColumn":20},{"ruleId":"238","severity":1,"message":"284","line":2,"column":28,"nodeType":"240","messageId":"241","endLine":2,"endColumn":34},{"ruleId":"238","severity":1,"message":"285","line":11,"column":7,"nodeType":"240","messageId":"241","endLine":11,"endColumn":13},{"ruleId":"238","severity":1,"message":"287","line":85,"column":11,"nodeType":"240","messageId":"241","endLine":85,"endColumn":25},{"ruleId":"238","severity":1,"message":"287","line":91,"column":20,"nodeType":"240","messageId":"241","endLine":91,"endColumn":34},{"ruleId":"238","severity":1,"message":"288","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":17},{"ruleId":"238","severity":1,"message":"248","line":6,"column":9,"nodeType":"240","messageId":"241","endLine":6,"endColumn":13},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"@typescript-eslint/no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'setAuthorised' is assigned a value but never used.","'makeStyles' is defined but never used.","'Box' is defined but never used.","'Badge' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.","'NotificationsIcon' is defined but never used.","'MailIcon' is defined but never used.","'React' is defined but never used.","'SliderClassKey' is defined but never used.","'Typography' is defined but never used.","'Accordion' is defined but never used.","'useTheme' is defined but never used.","'Icon' is defined but never used.","'CheckCircle' is defined but never used.","'Cancel' is defined but never used.","'pink' is defined but never used.","'DataTableProps' is defined but never used.","'isTypeNode' is defined but never used.","'theme' is assigned a value but never used.","'selectedCategory' is assigned a value but never used.","'setSelectedCategory' is assigned a value but never used.","'AppUserMenuProps' is defined but never used.","'Button' is defined but never used.","'setDealerDiscount' is assigned a value but never used.","'setDealerPrice' is assigned a value but never used.","'ListItem' is defined but never used.","'ListSubheader' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'Theme' is defined but never used.","'blue600' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","'clickHandler' is defined but never used.","'TableContainer' is defined but never used.","'classes' is assigned a value but never used.","'InputLabel' is defined but never used.","'Avatar' is defined but never used.","'styles' is assigned a value but never used.","'NotificationsMenuProps' is defined but never used.","'MailsMenuProps' is defined but never used.","'DataTable' is defined but never used.","no-global-assign","no-unsafe-negation"]